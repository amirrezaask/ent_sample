// Code generated by entc, DO NOT EDIT.

package student

const (
	// Label holds the string label denoting the student type in the database.
	Label = "student"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldBirthYear holds the string denoting the birth_year field in the database.
	FieldBirthYear = "birth_year"
	// EdgeCourses holds the string denoting the courses edge name in mutations.
	EdgeCourses = "courses"
	// Table holds the table name of the student in the database.
	Table = "students"
	// CoursesTable is the table that holds the courses relation/edge. The primary key declared below.
	CoursesTable = "student_courses"
	// CoursesInverseTable is the table name for the Course entity.
	// It exists in this package in order to avoid circular dependency with the "course" package.
	CoursesInverseTable = "courses"
)

// Columns holds all SQL columns for student fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldBirthYear,
}

var (
	// CoursesPrimaryKey and CoursesColumn2 are the table columns denoting the
	// primary key for the courses relation (M2M).
	CoursesPrimaryKey = []string{"student_id", "course_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
